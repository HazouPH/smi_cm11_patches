From b253e27a2c738bf1059a6573500cc13ce0e34fd1 Mon Sep 17 00:00:00 2001
From: Pavan Kumar S <pavan.kumar.s@intel.com>
Date: Fri, 6 Dec 2013 11:54:48 +0530
Subject: [PATCH 4/9] healthd periodically wakes up to poll health state and
 perform periodic chores. It does both uevent based and time based polling.
 This causes unwanted wakes from sleep-states.

Since, healthd also has uevent based monitoring, and as all the battery/charger related
extreme conditions and event changes are monitored in driver-framework and notified
through uevent, the polling aspect of healthd could be disabled to avoid unwanted wakes.

Change-Id: Ic1592e791c9b5b2497894f4b62a68eb1be11d3cf
Category: device enablement
Domain: BatteryManagement-Common
Origin: internal
Signed-off-by: Pavan Kumar S <pavan.kumar.s@intel.com>
---
 healthd/healthd.cpp | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/healthd/healthd.cpp b/healthd/healthd.cpp
index 8acc7fe..50c6163 100644
--- a/healthd/healthd.cpp
+++ b/healthd/healthd.cpp
@@ -88,6 +88,7 @@ static int wakealarm_wake_interval = DEFAULT_PERIODIC_CHORES_INTERVAL_FAST;
 static BatteryMonitor* gBatteryMonitor;
 
 static bool nosvcmgr;
+static bool nopolling;
 
 static void wakealarm_set_interval(int interval) {
     struct itimerspec itval;
@@ -282,17 +283,25 @@ int main(int argc, char **argv) {
 
     klog_set_level(KLOG_LEVEL);
 
-    while ((ch = getopt(argc, argv, "n")) != -1) {
+    while ((ch = getopt(argc, argv, "np")) != -1) {
         switch (ch) {
         case 'n':
             nosvcmgr = true;
             break;
+        case 'p':
+            nopolling = true;
+            break;
         case '?':
         default:
             KLOG_WARNING(LOG_TAG, "Unrecognized healthd option: %c\n", ch);
         }
     }
 
+    if (nopolling == true) {
+        healthd_config.periodic_chores_interval_fast = -1;
+        healthd_config.periodic_chores_interval_slow = -1;
+    }
+
     healthd_board_init(&healthd_config);
     wakealarm_init();
     uevent_init();
-- 
2.7.4

