From 8651644769b618d7e456498f1481ac542dd22d9e Mon Sep 17 00:00:00 2001
From: Stephen Woo <stephen.m.woo@intel.com>
Date: Wed, 5 Jun 2013 17:31:54 -0700
Subject: Add two components to MPEG4Extractor

BZ: 113980

The original MPEG4Extractor is lacking the udta components: "titl"
and "perf." Add the two components.
borqsbtx: 22836

Category: aosp improvement
Domain: local playback
Origin: internal
Upstream-Candidate: yes

Change-Id: I765fc100f8882cee6f2b056dc546ec7df36f5996
Orig-Change-Id: Idef8ec9c8ee661da75e13762f6e70a28a50035d9
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 media/libstagefright/MPEG4Extractor.cpp       |   67 +++++++++++++++++++++++++
 media/libstagefright/include/MPEG4Extractor.h |    1 +
 2 files changed, 68 insertions(+), 0 deletions(-)

diff --git a/media/libstagefright/MPEG4Extractor.cpp b/media/libstagefright/MPEG4Extractor.cpp
index 0c7849b..6757cd0 100644
--- a/media/libstagefright/MPEG4Extractor.cpp
+++ b/media/libstagefright/MPEG4Extractor.cpp
@@ -741,6 +741,69 @@ static void convertTimeToDate(int64_t time_1904, String8 *s) {
     s->setTo(tmp);
 }
 
+status_t MPEG4Extractor::parseUdtaMetaData(off64_t offset, size_t size) {
+        ALOGV("This file have udta component ,size = %d\n", size);
+        if (size < 4) {
+            return ERROR_MALFORMED;
+        }
+
+        char *buffer = new char[size + 1];
+        if (mDataSource->readAt(
+                    offset, buffer, size) != (ssize_t)size) {
+            delete[] buffer;
+            buffer = NULL;
+
+            return ERROR_IO;
+        }
+        int buffer_off = 0;
+        uint64_t chunk_size;
+        uint32_t chunk_type;
+        while(buffer_off < size) {
+            chunk_size = U32_AT((uint8_t*)&buffer[buffer_off]);
+            chunk_type = U32_AT((uint8_t*)&buffer[buffer_off + 4]);
+
+            ALOGV("chunk_size = %d", chunk_size);
+
+            uint32_t metadataKey = 0;
+            switch (chunk_type) {
+                case FOURCC('t', 'i', 't', 'l'):
+                {
+                    ALOGV("have titl now!");
+                    metadataKey = kKeyTitle;
+                    break;
+                }
+                case FOURCC('p', 'e', 'r', 'f'):
+                {
+                    ALOGV("have perf now!");
+                    metadataKey = kKeyArtist;
+                    break;
+                }
+                default:
+                {
+                    break;
+                }
+            }
+
+            //14 = 8 + 6
+            //8: chunk_size + chunk_type totally 8 bytes.
+            //6: the offset from the chunk_type to the real user data.(bytes)
+            if (metadataKey && buffer_off + 14 < size) {
+                char *tmp = new char[chunk_size +1];
+                strncpy(tmp, &buffer[buffer_off + 14], chunk_size - 14);
+                tmp[chunk_size -14] = NULL;
+                mFileMetaData->setCString(metadataKey, tmp);
+
+                delete[] tmp;
+                tmp = NULL;
+            }
+
+            buffer_off += chunk_size;
+        }
+        delete[] buffer;
+        buffer = NULL;
+        return OK;
+}
+
 status_t MPEG4Extractor::parseChunk(off64_t *offset, int depth) {
     ALOGV("entering parseChunk %lld/%d", *offset, depth);
     uint32_t hdr[2];
@@ -868,6 +931,10 @@ status_t MPEG4Extractor::parseChunk(off64_t *offset, int depth) {
                 track->meta->setCString(kKeyMIMEType, "application/octet-stream");
             }
 
+            if (chunk_type == FOURCC('u', 'd', 't', 'a')) {
+                parseUdtaMetaData(data_offset, chunk_data_size);
+            }
+
             off64_t stop_offset = *offset + chunk_size;
             *offset = data_offset;
             while (*offset < stop_offset) {
diff --git a/media/libstagefright/include/MPEG4Extractor.h b/media/libstagefright/include/MPEG4Extractor.h
index bbec1c4..550208d 100644
--- a/media/libstagefright/include/MPEG4Extractor.h
+++ b/media/libstagefright/include/MPEG4Extractor.h
@@ -96,6 +96,7 @@ private:
     status_t readMetaData();
     status_t parseChunk(off64_t *offset, int depth);
     status_t parseMetaData(off64_t offset, size_t size);
+    status_t parseUdtaMetaData(off64_t offset, size_t size);
 
     status_t updateAudioTrackInfoFromESDS_MPEG4Audio(
             const void *esds_data, size_t esds_size);
-- 
1.7.4.1

