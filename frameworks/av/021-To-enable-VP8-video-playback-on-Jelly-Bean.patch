From d6a1b6a081f205da2e79842ce755412bafaa8d27 Mon Sep 17 00:00:00 2001
From: wfeng6 <wei.feng@intel.com>
Date: Wed, 21 Nov 2012 21:33:22 +0800
Subject: To enable VP8 video playback on Jelly Bean

BZ: 47610

Port patches from Intel R3 ICS release to enable VP8 video playback on JB.
Original patch:
34845: Enable one thread for enhancement SW VP8 deode preformance

Category: aosp improvement
Domain: Video.Media-local playback
Origin: internal
Upstream-Candidate: no

Change-Id: If1aae1dad53dcb1c6fac3d5a43a515dd90194c3e
Orig-Change-Id: Ifc4d1c278e6a6253e7675a1d9e7e9539f66ad150
Signed-off-by: wfeng6 <wei.feng@intel.com>
Signed-off-by: Tong, Bo <box.tong@intel.com>
Signed-off-by: Yuanjun Huang <yuanjun.huang@intel.com>
---
 media/libstagefright/Android.mk   |   11 +++++++++++
 media/libstagefright/OMXCodec.cpp |   16 ++++++++++++++++
 2 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/media/libstagefright/Android.mk b/media/libstagefright/Android.mk
index f40d84d..fde4a7d 100644
--- a/media/libstagefright/Android.mk
+++ b/media/libstagefright/Android.mk
@@ -104,6 +104,16 @@ LOCAL_STATIC_LIBRARIES := \
         libFLAC \
         libmedia_helper
 
+ifeq ($(USE_INTEL_MDP),true)
+LOCAL_C_INCLUDES += $(TARGET_OUT_HEADERS)/media_codecs
+
+LOCAL_STATIC_LIBRARIES += \
+        lib_stagefright_mdp_vp8dec \
+        libmc_vp8_dec \
+        libmc_codec_common \
+        libmc_core
+LOCAL_CPPFLAGS += -DUSE_INTEL_MDP
+endif
 
 LOCAL_SRC_FILES += ExtendedCodec.cpp ExtendedExtractor.cpp ExtendedUtils.cpp
 
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 43736ad..41e441d 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -44,6 +44,11 @@
 
 #include "include/avc_utils.h"
 
+#ifdef USE_INTEL_MDP
+#include "UMCMacro.h"
+#include "include/ThreadedSource.h"
+#endif
+
 #ifdef ENABLE_AV_ENHANCEMENTS
 #include <QCMediaDefs.h>
 #include <QCMetaData.h>
@@ -62,6 +67,10 @@ static sp<MediaSource> Make##name(const sp<MediaSource> &source, const sp<MetaDa
     return new name(source, meta); \
 }
 
+#ifdef USE_INTEL_MDP
+FACTORY_CREATE_DECL(CIPVP8Decoder)
+#endif
+
 #define FACTORY_REF(name) { #name, Make##name },
 
 #ifdef QTI_FLAC_DECODER
@@ -319,6 +328,13 @@ sp<MediaSource> OMXCodec::Create(
         }
 #endif
 
+#if USE_INTEL_MDP
+        if (!strncmp(componentName, "CIPVP8Decoder", 13)) {
+            ALOGI("Loading CIPVP8Decoder");
+            return new ThreadedSource(MakeCIPVP8Decoder(source));
+        }
+#endif
+
         sp<MediaSource> softwareCodec;
         if (createEncoder) {
             softwareCodec = InstantiateSoftwareEncoder(componentName, source, meta);
-- 
1.7.4.1

