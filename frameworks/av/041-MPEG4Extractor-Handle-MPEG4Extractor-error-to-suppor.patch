From 42d45f60917c13f61c8ab6879a73ef3d90925c1c Mon Sep 17 00:00:00 2001
From: Dan Liang <dan.liang@intel.com>
Date: Tue, 30 Apr 2013 14:18:53 +0800
Subject: MPEG4Extractor: Handle MPEG4Extractor error to support more mp4 clips

BZ: 48862

Original patches:
R3: 30130 (BZ: 18544)
R2: 10950 (BZ: 1854)

In MPEG4Extractor, if one 'trak' contains error, skip it and try to parse other valid 'trak' behind it.
For example, if audio track has some problem, previous design is to report error and stop parsing,
then valid video track cannot be played too. With the patch, we will scan other tracks to see if any valid
stream existsAnother fix is when ESDS box contains invalid size value in DescriptorHeader,
return actual size and keep parsing,to see if correct CSD info can be fetched finally.

Category: aosp improvement
Domain: Video.Media-container
Origin: internal
Upstream-Candidate: yes

Change-Id: I4e95f5c61289cb8039de7224cc52db4b68da2644
Orig-Change-Id: I0dd7a9f6b8a2d4072b94394bb441d7ce426b046c
Signed-off-by: Weian Chen <weian.chen@intel.com>
Signed-off-by: Dan Liang <dan.liang@intel.com>
Signed-off-by: Yuanjun Huang <yuanjun.huang@intel.com>
---
 media/libstagefright/ESDS.cpp           |    2 +-
 media/libstagefright/MPEG4Extractor.cpp |   10 +++++++++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/media/libstagefright/ESDS.cpp b/media/libstagefright/ESDS.cpp
index 4a0c35c..560c5bd 100644
--- a/media/libstagefright/ESDS.cpp
+++ b/media/libstagefright/ESDS.cpp
@@ -94,7 +94,7 @@ status_t ESDS::skipDescriptorHeader(
     ALOGV("tag=0x%02x data_size=%d", *tag, *data_size);
 
     if (*data_size > size) {
-        return ERROR_MALFORMED;
+        *data_size = size;
     }
 
     *data_offset = offset;
diff --git a/media/libstagefright/MPEG4Extractor.cpp b/media/libstagefright/MPEG4Extractor.cpp
index b989013..2708f35 100644
--- a/media/libstagefright/MPEG4Extractor.cpp
+++ b/media/libstagefright/MPEG4Extractor.cpp
@@ -864,7 +864,15 @@ status_t MPEG4Extractor::parseChunk(off64_t *offset, int depth) {
             while (*offset < stop_offset) {
                 status_t err = parseChunk(offset, depth + 1);
                 if (err != OK) {
-                    return err;
+                    if (chunk_type == FOURCC('t', 'r', 'a', 'k')){
+                        // If one 'trak' box contains error, we can skip it to keep parsing,
+                        // which make sure we can parse out following valid 'trak' in the clip
+                        ALOGE("invalid track, skip it and keep parsing");
+                        mLastTrack->skipTrack = true;
+                        *offset = stop_offset;
+                    } else {
+                        return err;
+                    }
                 }
             }
 
-- 
1.7.4.1

