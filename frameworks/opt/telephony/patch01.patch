diff --git a/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java b/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
index cdc3178..127818c 100644
--- a/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
+++ b/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
@@ -210,6 +210,7 @@ public class GsmServiceStateTracker extends ServiceStateTracker {
                 (PowerManager)phone.getContext().getSystemService(Context.POWER_SERVICE);
         mWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, WAKELOCK_TAG);
 
+	mCi.registerForOn(this, EVENT_RADIO_ON, null);
         mCi.registerForAvailable(this, EVENT_RADIO_AVAILABLE, null);
         mCi.registerForRadioStateChanged(this, EVENT_RADIO_STATE_CHANGED, null);
 
@@ -248,6 +249,7 @@ public class GsmServiceStateTracker extends ServiceStateTracker {
         log("ServiceStateTracker dispose");
 
         // Unregister for all events.
+	mCi.unregisterForOn(this);
         mCi.unregisterForAvailable(this);
         mCi.unregisterForRadioStateChanged(this);
         mCi.unregisterForVoiceNetworkStateChanged(this);
@@ -289,20 +291,32 @@ public class GsmServiceStateTracker extends ServiceStateTracker {
                 //setPowerStateToDesired();
                 break;
 
+            case EVENT_RADIO_ON:
+                if (mUiccApplcation == null
+                        || mUiccApplcation.getState() != AppState.APPSTATE_READY) {
+                    break;
+                }
+                // Fall through to restore saved network selection if sim is ready
+
             case EVENT_SIM_READY:
-                // Set the network type, in case the radio does not restore it.
-                mCi.setCurrentPreferredNetworkType();
 
-                boolean skipRestoringSelection = mPhone.getContext().getResources().getBoolean(
-                        com.android.internal.R.bool.skip_restoring_network_selection);
+                // SIM can be accessible in radio off
+                if (mCi.getRadioState().isOn()) {
+
+                    // Set the network type, in case the radio does not restore it.
+		    mCi.setCurrentPreferredNetworkType();
 
-                if (!skipRestoringSelection) {
-                    // restore the previous network selection.
-                    mPhone.restoreSavedNetworkSelection(null);
+                    boolean skipRestoringSelection = mPhone.getContext().getResources().getBoolean(
+                            com.android.internal.R.bool.skip_restoring_network_selection);
+
+                    if (!skipRestoringSelection) {
+                        // restore the previous network selection.
+                        mPhone.restoreSavedNetworkSelection(null);
+                    }
+                    pollState();
+                    // Signal strength polling stops when radio is off
+                    queueNextSignalStrengthPoll();
                 }
-                pollState();
-                // Signal strength polling stops when radio is off
-                queueNextSignalStrengthPoll();
                 break;
 
             case EVENT_RADIO_STATE_CHANGED:
