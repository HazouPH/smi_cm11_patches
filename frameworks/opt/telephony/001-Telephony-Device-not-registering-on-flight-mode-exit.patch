From 01926f274df2db3e7633144858dc736ea0655074 Mon Sep 17 00:00:00 2001
From: Jeevaka Badrappan <jeevaka.badrappan@intel.com>
Date: Tue, 5 Nov 2013 12:56:44 +0200
Subject: [PATCH] Telephony: Device not registering on flight mode exit

When entering Flight mode, in some platforms radio
may be switched off but not the SIM. So, SIM
notifications can be received in flight mode.
Currently, restoring of saved network selection is
done on SIM ready. Since radio is off in flight mode,
restoring network selection request will be rejected.
So, when the flight mode is deactivated, no network
selection request is sent thus resulting in device
not getting registered.

Restore the saved network selection only if the radio is
on and sim is ready.

Change-Id: I6eeff5285e4cc63034f573886f7290900e4ddd9b
Category: aosp improvement
Domain: Telephony-base
Origin: internal
Signed-off-by: Jeevaka Badrappan <jeevaka.badrappan@intel.com>
Signed-off-by: Arun Ravindran <arun.ravindran@intel.com>
---
 .../telephony/gsm/GsmServiceStateTracker.java      | 34 +++++++++++++++-------
 1 file changed, 24 insertions(+), 10 deletions(-)

diff --git a/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java b/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
index cdc3178..127818c 100644
--- a/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
+++ b/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
@@ -210,6 +210,7 @@ public class GsmServiceStateTracker extends ServiceStateTracker {
                 (PowerManager)phone.getContext().getSystemService(Context.POWER_SERVICE);
         mWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, WAKELOCK_TAG);
 
+	mCi.registerForOn(this, EVENT_RADIO_ON, null);
         mCi.registerForAvailable(this, EVENT_RADIO_AVAILABLE, null);
         mCi.registerForRadioStateChanged(this, EVENT_RADIO_STATE_CHANGED, null);
 
@@ -248,6 +249,7 @@ public class GsmServiceStateTracker extends ServiceStateTracker {
         log("ServiceStateTracker dispose");
 
         // Unregister for all events.
+	mCi.unregisterForOn(this);
         mCi.unregisterForAvailable(this);
         mCi.unregisterForRadioStateChanged(this);
         mCi.unregisterForVoiceNetworkStateChanged(this);
@@ -289,20 +291,32 @@ public class GsmServiceStateTracker extends ServiceStateTracker {
                 //setPowerStateToDesired();
                 break;
 
+            case EVENT_RADIO_ON:
+                if (mUiccApplcation == null
+                        || mUiccApplcation.getState() != AppState.APPSTATE_READY) {
+                    break;
+                }
+                // Fall through to restore saved network selection if sim is ready
+
             case EVENT_SIM_READY:
-                // Set the network type, in case the radio does not restore it.
-                mCi.setCurrentPreferredNetworkType();
 
-                boolean skipRestoringSelection = mPhone.getContext().getResources().getBoolean(
-                        com.android.internal.R.bool.skip_restoring_network_selection);
+                // SIM can be accessible in radio off
+                if (mCi.getRadioState().isOn()) {
+
+                    // Set the network type, in case the radio does not restore it.
+		    mCi.setCurrentPreferredNetworkType();
 
-                if (!skipRestoringSelection) {
-                    // restore the previous network selection.
-                    mPhone.restoreSavedNetworkSelection(null);
+                    boolean skipRestoringSelection = mPhone.getContext().getResources().getBoolean(
+                            com.android.internal.R.bool.skip_restoring_network_selection);
+
+                    if (!skipRestoringSelection) {
+                        // restore the previous network selection.
+                        mPhone.restoreSavedNetworkSelection(null);
+                    }
+                    pollState();
+                    // Signal strength polling stops when radio is off
+                    queueNextSignalStrengthPoll();
                 }
-                pollState();
-                // Signal strength polling stops when radio is off
-                queueNextSignalStrengthPoll();
                 break;
 
             case EVENT_RADIO_STATE_CHANGED:
-- 
2.5.0

