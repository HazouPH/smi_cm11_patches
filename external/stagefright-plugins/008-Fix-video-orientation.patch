From 5d0b2c9b124252198e6209b445846bb346b7edca Mon Sep 17 00:00:00 2001
From: Keith Mok <kmok@cyngn.com>
Date: Thu, 21 Jan 2016 16:40:55 -0800
Subject: [PATCH] stagefright-plugins: Fix video orientation

* Some videos are encoded rotated, but it also records the rotation in a
  rotation matrix. During playback, the player should apply the
  rotation matrix for display purpose.
  Right now, ffmpeg does decode the rotation matrix stored on the video file.
  But stagefright-plugins does not parse that meta data to stagefright.
  Added code to pass kKeyRotation to stagefright.
* Fixes CYNGNOS-1692

Change-Id: I718fd80c4695407fb214bab359d5cc255044725e
---
 extractor/FFmpegExtractor.cpp | 17 +++++++++++++++++
 utils/ffmpeg_cmdutils.c       | 26 ++++++++++++++++++++++++++
 utils/ffmpeg_cmdutils.h       |  1 +
 3 files changed, 44 insertions(+)

diff --git a/libstagefright/FFmpegExtractor/FFmpegExtractor.cpp b/libstagefright/FFmpegExtractor/FFmpegExtractor.cpp
index 75489f8..5c0773e 100644
--- a/libstagefright/FFmpegExtractor/FFmpegExtractor.cpp
+++ b/libstagefright/FFmpegExtractor/FFmpegExtractor.cpp
@@ -412,6 +412,23 @@ sp<MetaData> FFmpegExtractor::setVideoFormat(AVStream *stream)
     }
 
     if (meta != NULL) {
+        // rotation
+        double theta = get_rotation(stream);
+        int rotationDegrees = 0;
+
+        if (fabs(theta - 90) < 1.0) {
+            rotationDegrees = 90;
+        } else if (fabs(theta - 180) < 1.0) {
+            rotationDegrees = 180;
+        } else if (fabs(theta - 270) < 1.0) {
+            rotationDegrees = 270;
+        }
+        if (rotationDegrees != 0) {
+            meta->setInt32(kKeyRotation, rotationDegrees);
+        }
+    }
+
+    if (meta != NULL) {
         ALOGI("width: %d, height: %d, bit_rate: %d",
                 avctx->width, avctx->height, avctx->bit_rate);
 
diff --git a/utils/ffmpeg_cmdutils.c b/utils/ffmpeg_cmdutils.c
index 291574b..e1a1db2 100644
--- a/utils/ffmpeg_cmdutils.c
+++ b/utils/ffmpeg_cmdutils.c
@@ -1,5 +1,7 @@
 #if 1
 #include "config.h"
+#include "libavutil/display.h"
+#include "libavutil/eval.h"
 #include "libavutil/log.h"
 #include "libavutil/opt.h"
 #include "libavformat/avformat.h"
@@ -18,6 +20,30 @@ void print_error(const char *filename, int err)
 }
 */
 
+double get_rotation(AVStream *st)
+{
+    AVDictionaryEntry *rotate_tag = av_dict_get(st->metadata, "rotate", NULL, 0);
+    uint8_t* displaymatrix = av_stream_get_side_data(st,
+                                                     AV_PKT_DATA_DISPLAYMATRIX, NULL);
+    double theta = 0;
+
+    if (rotate_tag && *rotate_tag->value && strcmp(rotate_tag->value, "0")) {
+        char *tail;
+        theta = av_strtod(rotate_tag->value, &tail);
+        if (*tail)
+            theta = 0;
+    }
+    if (displaymatrix && !theta)
+        theta = -av_display_rotation_get((int32_t*) displaymatrix);
+
+    theta -= 360*floor(theta/360 + 0.9/360);
+
+    if (fabs(theta - 90*round(theta/90)) > 2)
+        av_log(NULL, AV_LOG_WARNING, "Odd rotation angle.");
+
+    return theta;
+}
+
 int check_stream_specifier(AVFormatContext *s, AVStream *st, const char *spec)
 {
     int ret = avformat_match_stream_specifier(s, st, spec);
diff --git a/utils/ffmpeg_cmdutils.h b/utils/ffmpeg_cmdutils.h
index f56b6eb..da84475 100644
--- a/utils/ffmpeg_cmdutils.h
+++ b/utils/ffmpeg_cmdutils.h
@@ -22,6 +22,7 @@ extern "C" {
 struct AVDictionary;
 struct AVFormatContext;
 
+double get_rotation(AVStream *st);
 extern AVDictionary *format_opts, *codec_opts;
 
 AVDictionary **setup_find_stream_info_opts(AVFormatContext *, AVDictionary *);
