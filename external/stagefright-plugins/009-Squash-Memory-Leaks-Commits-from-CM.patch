From 2d0fc44801a669ec931267379c5a0dbefd45e0a2 Mon Sep 17 00:00:00 2001
From: Patrick Harbers <jgrharbers@gmail.com>
Date: Thu, 14 Apr 2016 15:53:47 +0200
Subject: [PATCH] Squash Memory Leaks Commits from CM

 From c32061cf1cfbd21f7f19f241548a83ae267cd1d1 Mon Sep 17 00:00:00 2001
 From: Keith Mok <kmok@cyngn.com>
 Date: Mon, 14 Mar 2016 12:12:27 -0700
 Subject: [PATCH] stagefright-plugins: Fix memory leak 

 Should use av_frame_free to free AVFrame
 instead of av_freep  

 CYNGNOS-2239

 Change-Id: If441761f55d92f3de94ede36a1ec7cfa5b63dfd4

 From c39d0913afa42aa35b8ac0b867668f65569654fc Mon Sep 17 00:00:00 2001
 From: Keith Mok <kmok@cyngn.com>
 Date: Mon, 14 Mar 2016 11:20:03 -0700
 Subject: [PATCH] stagefright-plugins: Fix memory leak

 AVPacket needs to be unreference after
 calling avcodec_decode_video2.
 Reference: "ffmpeg/tests/api/api-band-test.c"

 CYNGNOS-2239

 Change-Id: I0ffb7c95addc32cb49c070d95a8d7cc950646360

 From b8759d0fdbebabfab1ecffcbc0223858e5b55458 Mon Sep 17 00:00:00 2001
 From: Keith Mok <kmok@cyngn.com>
 Date: Mon, 14 Mar 2016 08:59:00 -0700
 Subject: [PATCH] stagefright-plugins: Fix memory leak

 During deinitDecoder mCtx may not be free due to
 codec have not be opened.

 CYNGNOS-2239

 This fixes:
 984 bytes in 1 blocks are definitely lost in loss record 1,174 of 1,286
   at 0x486B8AC: memalign (in /system/lib/valgrind/vgpreload_memcheck-arm-linux.so)
   by 0x486B9C7: posix_memalign (in /system/lib/valgrind/vgpreload_memcheck-arm-linux.so)
   by 0xC1165BB: av_malloc (in /system/vendor/lib/libavutil.so)
   by 0xE0914A7: avcodec_alloc_context3 (in /system/vendor/lib/libavcodec.so)
   by 0xBF2DD2B: android::SoftFFmpegVideo::initDecoder(AVCodecID) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0xBF2DC9B: android::SoftFFmpegVideo::SoftFFmpegVideo(char const*, char const*, OMX_VIDEO_CODINGTYPE, android::CodecProfileLevel const*, unsigned int, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**, AVCodecID) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0xBF2EAC5: android::SoftFFmpegVideo::createSoftOMXComponent(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0xBF2B651: android::FFmpegOMXPlugin::makeComponentInstance(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0x53D8DA3: android::OMXMaster::makeComponentInstance(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (in /system/lib/libstagefright_omx.so)
   by 0x53D7331: android::OMX::allocateNode(char const*, android::sp<android::IOMXObserver> const&, unsigned int*) (in /system/lib/libstagefright_omx.so)
   by 0x50271DB: android::QueryCodec(android::sp<android::IOMX> const&, char const*, char const*, bool, android::CodecCapabilities*) (in /system/lib/libstagefright.so)
   by 0x5010EF7: android::MediaCodecList::initializeCapabilities(char const*) (in /system/lib/libstagefright.so)

 3,936 bytes in 4 blocks are definitely lost in loss record 1,223 of 1,286
   at 0x486B8AC: memalign (in /system/lib/valgrind/vgpreload_memcheck-arm-linux.so)
   by 0x486B9C7: posix_memalign (in /system/lib/valgrind/vgpreload_memcheck-arm-linux.so)
   by 0xC1165BB: av_malloc (in /system/vendor/lib/libavutil.so)
   by 0xE0914A7: avcodec_alloc_context3 (in /system/vendor/lib/libavcodec.so)
   by 0xBF2BAC9: android::SoftFFmpegAudio::initDecoder(AVCodecID) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0xBF2B92B: android::SoftFFmpegAudio::SoftFFmpegAudio(char const*, char const*, OMX_AUDIO_CODINGTYPE, AVCodecID, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0xBF2D723: android::SoftFFmpegAudio::createSoftOMXComponent(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0xBF2B619: android::FFmpegOMXPlugin::makeComponentInstance(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (in /system/vendor/lib/libffmpeg_omx.so)
   by 0x53D8DA3: android::OMXMaster::makeComponentInstance(char const*, OMX_CALLBACKTYPE const*, void*, OMX_COMPONENTTYPE**) (in /system/lib/libstagefright_omx.so)
   by 0x53D7331: android::OMX::allocateNode(char const*, android::sp<android::IOMXObserver> const&, unsigned int*) (in /system/lib/libstagefright_omx.so)
   by 0x50271DB: android::QueryCodec(android::sp<android::IOMX> const&, char const*, char const*, bool, android::CodecCapabilities*) (in /system/lib/libstagefright.so)
   by 0x5010EF7: android::MediaCodecList::initializeCapabilities(char const*) (in /system/lib/libstagefright.so)

Change-Id: I623860502bc692663c80bf0f26305270e161df2c
---
 libstagefright/codecs/ffmpegdec/adec/SoftFFmpegAudio.cpp | 8 +++++---
 libstagefright/codecs/ffmpegdec/vdec/SoftFFmpegVideo.cpp | 8 +++++---
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/libstagefright/codecs/ffmpegdec/adec/SoftFFmpegAudio.cpp b/libstagefright/codecs/ffmpegdec/adec/SoftFFmpegAudio.cpp
index 55af33c..8d030c4 100644
--- a/libstagefright/codecs/ffmpegdec/adec/SoftFFmpegAudio.cpp
+++ b/libstagefright/codecs/ffmpegdec/adec/SoftFFmpegAudio.cpp
@@ -352,13 +352,13 @@ void SoftFFmpegAudio::deInitDecoder() {
         deinitVorbisHdr();
 
         if (mCodecAlreadyOpened) {
-            avcodec_close(mCtx);
-            av_free(mCtx);
             mCtx = NULL;
         }
+        avcodec_close(mCtx);
+        av_free(mCtx);
     }
     if (mFrame) {
-        av_freep(&mFrame);
+        av_frame_free(&mFrame);
         mFrame = NULL;
     }
     if (mSwrCtx) {
@@ -1293,6 +1293,8 @@ int32_t SoftFFmpegAudio::decodeAudio() {
     av_frame_unref(mFrame);
 
     len = avcodec_decode_audio4(mCtx, mFrame, &gotFrm, &pkt);
+    av_packet_unref(&pkt);
+
     //a negative error code is returned if an error occurred during decoding
     if (len < 0) {
         ALOGW("ffmpeg audio decoder err, we skip the frame and play silence instead");
diff --git a/libstagefright/codecs/ffmpegdec/vdec/SoftFFmpegVideo.cpp b/libstagefright/codecs/ffmpegdec/vdec/SoftFFmpegVideo.cpp
index b5a8788..726bf2a 100644
--- a/libstagefright/codecs/ffmpegdec/vdec/SoftFFmpegVideo.cpp
+++ b/libstagefright/codecs/ffmpegdec/vdec/SoftFFmpegVideo.cpp
@@ -342,13 +342,13 @@ void SoftFFmpegVideo::deInitDecoder() {
             mCtx->extradata_size = 0;
         }
         if (mCodecAlreadyOpened) {
-            avcodec_close(mCtx);
-            av_free(mCtx);
             mCtx = NULL;
         }
+        avcodec_close(mCtx);
+        av_free(mCtx);
     }
     if (mFrame) {
-        av_freep(&mFrame);
+        av_frame_free(&mFrame);
         mFrame = NULL;
     }
     if (mImgConvertCtx) {
@@ -845,6 +845,8 @@ int32_t SoftFFmpegVideo::decodeVideo() {
     av_frame_unref(mFrame);
 
     int err = avcodec_decode_video2(mCtx, mFrame, &gotPic, &pkt);
+    av_packet_unref(&pkt);
+
     if (err < 0) {
         ALOGE("ffmpeg video decoder failed to decode frame. (%d)", err);
         //don't send error to OMXCodec, skip!
-- 
2.5.0

