From 30bf493720e438459e55799c826d382e56e20763 Mon Sep 17 00:00:00 2001
From: Patrick Harbers <jgrharbers@gmail.com>
Date: Thu, 14 Apr 2016 21:48:27 +0200
Subject: [PATCH 2/4] Remove AndroidAC3 (don't have it)

Fix some printf defines

Change-Id: I4da58b77c169fb6cc7d945175cd64271b448324a
---
 extractor/FFmpegExtractor.cpp | 21 ++++++++++-------
 include/FFmpegComponents.h    |  3 ---
 omx/FFmpegOMXPlugin.h         |  3 ---
 omx/SoftFFmpegAudio.cpp       | 54 ++++++-------------------------------------
 omx/SoftFFmpegAudio.h         |  3 ---
 omx/SoftFFmpegVideo.cpp       |  6 ++---
 6 files changed, 23 insertions(+), 67 deletions(-)

diff --git a/extractor/FFmpegExtractor.cpp b/extractor/FFmpegExtractor.cpp
index a98855d..c6e58f6 100644
--- a/extractor/FFmpegExtractor.cpp
+++ b/extractor/FFmpegExtractor.cpp
@@ -463,7 +463,7 @@ sp<MetaData> FFmpegExtractor::setVideoFormat(AVStream *stream)
         height = avctx->height;
         width = ((int)rint(height * aspect_ratio)) & ~1;
 
-        ALOGI("width: %d, height: %d, bit_rate: %d aspect ratio: %f",
+        ALOGI("width: %d, height: %d, bit_rate: %lld aspect ratio: %f",
                 avctx->width, avctx->height, avctx->bit_rate, aspect_ratio);
 
         meta->setInt32(kKeyWidth, avctx->width);
@@ -537,7 +537,6 @@ sp<MetaData> FFmpegExtractor::setAudioFormat(AVStream *stream)
                 avctx->codec_id, avcodec_get_name(avctx->codec_id));
         meta = new MetaData;
         meta->setInt32(kKeyCodecId, avctx->codec_id);
-        meta->setInt32(kKeyCodedSampleBits, avctx->bits_per_coded_sample);
         meta->setCString(kKeyMIMEType, MEDIA_MIMETYPE_AUDIO_FFMPEG);
         if (avctx->extradata_size > 0) {
             meta->setData(kKeyRawCodecSpecificData, 0, avctx->extradata, avctx->extradata_size);
@@ -547,16 +546,22 @@ sp<MetaData> FFmpegExtractor::setAudioFormat(AVStream *stream)
     }
 
     if (meta != NULL) {
-        ALOGD("bit_rate: %d, sample_rate: %d, channels: %d, "
+        ALOGD("bit_rate: %lld, sample_rate: %d, channels: %d, "
                 "bits_per_coded_sample: %d, block_align: %d "
                 "bits_per_raw_sample: %d, sample_format: %d",
                 avctx->bit_rate, avctx->sample_rate, avctx->channels,
                 avctx->bits_per_coded_sample, avctx->block_align,
                 avctx->bits_per_raw_sample, avctx->sample_fmt);
 
+        int32_t bitsPerSample = 16;
+
+        if (av_get_bytes_per_sample(avctx->sample_fmt) > 2) {
+            bitsPerSample = 24;
+        }
+
         meta->setInt32(kKeyChannelCount, avctx->channels);
         meta->setInt32(kKeyBitRate, avctx->bit_rate);
-        meta->setInt32(kKeyBitsPerSample, av_get_bytes_per_sample(avctx->sample_fmt) > 2 ? 24 : 16);
+        meta->setInt32(kKeySampleBits, bitsPerSample);
         meta->setInt32(kKeySampleRate, avctx->sample_rate);
         meta->setInt32(kKeyBlockAlign, avctx->block_align);
         meta->setInt32(kKeySampleFormat, avctx->sample_fmt);
@@ -1530,10 +1535,10 @@ retry:
     // in OMXCodec.cpp CHECK(lastBufferTimeUs >= 0).
     // And we should not get negative timestamp
     if (timeUs < 0) {
-        ALOGE("negative timestamp encounter: time: %" PRId64
-               " startTimeUs: %" PRId64
-               " packet dts: %" PRId64
-               " packet pts: %" PRId64
+        ALOGE("negative timestamp encounter: time: %lld"
+               " startTimeUs: %lld"
+               " packet dts: %lld"
+               " packet pts: %lld"
                , timeUs, startTimeUs, pkt.dts, pkt.pts);
         mediaBuffer->release();
         mediaBuffer = NULL;
diff --git a/include/FFmpegComponents.h b/include/FFmpegComponents.h
index b32fc5b..df03199 100644
--- a/include/FFmpegComponents.h
+++ b/include/FFmpegComponents.h
@@ -18,9 +18,6 @@
 
 #define FFMPEG_COMPONENTS_H_
 
-#include <OMX_AudioExt.h>
-#include <OMX_IndexExt.h>
-
 #include "config.h"
 #include "libavformat/avformat.h"
 #include "libavcodec/avcodec.h"
diff --git a/omx/FFmpegOMXPlugin.h b/omx/FFmpegOMXPlugin.h
index 71cb400..fa32725 100644
--- a/omx/FFmpegOMXPlugin.h
+++ b/omx/FFmpegOMXPlugin.h
@@ -21,9 +21,6 @@
 #include <media/stagefright/foundation/ABase.h>
 #include <OMXPluginBase.h>
 
-#include <OMX_AudioExt.h>
-#include <OMX_IndexExt.h>
-
 #include "config.h"
 #include "libavformat/avformat.h"
 #include "libavcodec/avcodec.h"
diff --git a/omx/SoftFFmpegAudio.cpp b/omx/SoftFFmpegAudio.cpp
index e882703..e503696 100644
--- a/omx/SoftFFmpegAudio.cpp
+++ b/omx/SoftFFmpegAudio.cpp
@@ -28,9 +28,6 @@
 #include <media/stagefright/MediaDefs.h>
 #include <media/stagefright/OMXCodec.h>
 
-#include <OMX_AudioExt.h>
-#include <OMX_IndexExt.h>
-
 #define DEBUG_PKT 0
 #define DEBUG_FRM 0
 
@@ -434,22 +431,6 @@ OMX_ERRORTYPE SoftFFmpegAudio::internalGetParameter(
             return OMX_ErrorNone;
         }
 
-        case OMX_IndexParamAudioAndroidAc3:
-        {
-            OMX_AUDIO_PARAM_ANDROID_AC3TYPE *profile =
-                (OMX_AUDIO_PARAM_ANDROID_AC3TYPE *)params;
-
-            if (profile->nPortIndex != kInputPortIndex) {
-                return OMX_ErrorUndefined;
-            }
-
-            profile->nChannels = mCtx->channels;
-            profile->nSampleRate = mCtx->sample_rate;
-
-            return OMX_ErrorNone;
-        }
-
-
         case OMX_IndexParamAudioAc3:
         {
             OMX_AUDIO_PARAM_AC3TYPE *profile =
@@ -657,8 +638,8 @@ OMX_ERRORTYPE SoftFFmpegAudio::internalSetParameter(
             adjustAudioParams();
 
             ALOGD("set OMX_IndexParamAudioVorbis, "
-                    "nChannels=%u, nSampleRate=%u, nBitRate=%u, "
-                    "nMinBitRate=%u, nMaxBitRate=%u",
+                    "nChannels=%lu, nSampleRate=%lu, nBitRate=%lu, "
+                    "nMinBitRate=%lu, nMaxBitRate=%lu",
                 profile->nChannels, profile->nSampleRate,
                 profile->nBitRate, profile->nMinBitRate,
                 profile->nMaxBitRate);
@@ -788,27 +769,6 @@ OMX_ERRORTYPE SoftFFmpegAudio::internalSetParameter(
             return OMX_ErrorNone;
         }
 
-        case OMX_IndexParamAudioAndroidAc3:
-        {
-            OMX_AUDIO_PARAM_ANDROID_AC3TYPE *profile =
-                (OMX_AUDIO_PARAM_ANDROID_AC3TYPE *)params;
-
-            if (profile->nPortIndex != kInputPortIndex) {
-                return OMX_ErrorUndefined;
-            }
-
-            mCtx->channels = profile->nChannels;
-            mCtx->sample_rate = profile->nSampleRate;
-
-            adjustAudioParams();
-
-            ALOGV("set OMX_IndexParamAudioAndroidAc3, nChannels:%u, nSampleRate:%u",
-                profile->nChannels, profile->nSampleRate);
-
-            return OMX_ErrorNone;
-        }
-
-
         case OMX_IndexParamAudioApe:
         {
             OMX_AUDIO_PARAM_APETYPE *profile =
@@ -872,9 +832,9 @@ OMX_ERRORTYPE SoftFFmpegAudio::internalSetParameter(
             adjustAudioParams();
 
             ALOGD("set OMX_IndexParamAudioFFmpeg, "
-                "eCodecId:%d(%s), nChannels:%u, nBitRate:%u, "
-                "nBitsPerSample:%u, nSampleRate:%u, "
-                "nBlockAlign:%u, eSampleFormat:%u(%s)",
+                "eCodecId:%ld(%s), nChannels:%lu, nBitRate:%lu, "
+                "nBitsPerSample:%lu, nSampleRate:%lu, "
+                "nBlockAlign:%lu, eSampleFormat:%lu(%s)",
                 profile->eCodecId, avcodec_get_name(mCtx->codec_id),
                 profile->nChannels, profile->nBitRate,
                 profile->nBitsPerSample, profile->nSampleRate,
@@ -922,12 +882,12 @@ int32_t SoftFFmpegAudio::handleExtradata() {
     BufferInfo *inInfo = *inQueue.begin();
     OMX_BUFFERHEADERTYPE *inHeader = inInfo->mHeader;
 
-    ALOGI("got extradata, ignore: %d, size: %u",
+    ALOGI("got extradata, ignore: %d, size: %lu",
             mIgnoreExtradata, inHeader->nFilledLen);
     hexdump(inHeader->pBuffer + inHeader->nOffset, inHeader->nFilledLen);
 
     if (mIgnoreExtradata) {
-        ALOGI("got extradata, size: %u, but ignore it", inHeader->nFilledLen);
+        ALOGI("got extradata, size: %lu, but ignore it", inHeader->nFilledLen);
     } else {
         if (!mExtradataReady) {
             uint32_t ret = ERR_OK;
diff --git a/omx/SoftFFmpegAudio.h b/omx/SoftFFmpegAudio.h
index 4a25671..ed415b2 100644
--- a/omx/SoftFFmpegAudio.h
+++ b/omx/SoftFFmpegAudio.h
@@ -28,9 +28,6 @@
 
 #include "utils/ffmpeg_utils.h"
 
-#include <OMX_AudioExt.h>
-#include <OMX_IndexExt.h>
-
 const int AVCODEC_MAX_AUDIO_FRAME_SIZE = 192000; // Deprecated in ffmpeg
 
 namespace android {
diff --git a/omx/SoftFFmpegVideo.cpp b/omx/SoftFFmpegVideo.cpp
index 36b35c6..f65b48d 100644
--- a/omx/SoftFFmpegVideo.cpp
+++ b/omx/SoftFFmpegVideo.cpp
@@ -335,7 +335,7 @@ OMX_ERRORTYPE SoftFFmpegVideo::internalSetParameter(
             mCtx->height   = profile->nHeight;
 
             ALOGD("got OMX_IndexParamVideoFFmpeg, "
-                "eCodecId:%d(%s), width:%u, height:%u",
+                "eCodecId:%ld(%s), width:%lu, height:%lu",
                 profile->eCodecId,
                 avcodec_get_name(mCtx->codec_id),
                 profile->nWidth,
@@ -351,12 +351,12 @@ int32_t SoftFFmpegVideo::handleExtradata() {
     BufferInfo *inInfo = *inQueue.begin();
     OMX_BUFFERHEADERTYPE *inHeader = inInfo->mHeader;
 
-    ALOGI("got extradata, ignore: %d, size: %u",
+    ALOGI("got extradata, ignore: %d, size: %lu",
             mIgnoreExtradata, inHeader->nFilledLen);
     hexdump(inHeader->pBuffer + inHeader->nOffset, inHeader->nFilledLen);
 
     if (mIgnoreExtradata) {
-        ALOGI("got extradata, size: %u, but ignore it", inHeader->nFilledLen);
+        ALOGI("got extradata, size: %lu, but ignore it", inHeader->nFilledLen);
     } else {
         if (!mExtradataReady) {
             //if (mMode == MODE_H264)
-- 
2.5.0

