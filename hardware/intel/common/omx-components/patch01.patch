diff --git a/videocodec/OMXComponentDefines.h b/videocodec/OMXComponentDefines.h
index 02c45e4..e697d45 100644
--- a/videocodec/OMXComponentDefines.h
+++ b/videocodec/OMXComponentDefines.h
@@ -38,7 +38,7 @@
 
 #define CHECK_PORT_INDEX(P, INDEX)\
     if ((P)->nPortIndex != INDEX) {\
-        LOGE("Bad port index %u, expected: %d", (P)->nPortIndex, INDEX);\
+        LOGE("Bad port index %lu, expected: %d", (P)->nPortIndex, INDEX);\
         return OMX_ErrorBadPortIndex;\
     }
 
@@ -50,7 +50,7 @@
 
 #define CHECK_PORT_INDEX_RANGE(P)\
     if ((P)->nPortIndex != 0 && (P)->nPortIndex != 1) {\
-        LOGE("Port out of range %u", (P)->nPortIndex);\
+        LOGE("Port out of range %lu", (P)->nPortIndex);\
         return OMX_ErrorBadPortIndex;\
     }
 
diff --git a/videocodec/OMXVideoDecoderAVC.cpp b/videocodec/OMXVideoDecoderAVC.cpp
index 87b74a4..8c50f80 100644
--- a/videocodec/OMXVideoDecoderAVC.cpp
+++ b/videocodec/OMXVideoDecoderAVC.cpp
@@ -276,7 +276,7 @@ OMX_ERRORTYPE OMXVideoDecoderAVC::SetParamIntelAVCDecodeSettings(OMX_PTR pStruct
         // TODO: check if we just return in this case.
         p->nMaxNumberOfReferenceFrame = NUM_REFERENCE_FRAME;
     }
-    LOGI("Maximum width = %u, height = %u, dpb = %u", p->nMaxWidth, p->nMaxHeight, p->nMaxNumberOfReferenceFrame);
+    LOGI("Maximum width = %lu, height = %lu, dpb = %lu", p->nMaxWidth, p->nMaxHeight, p->nMaxNumberOfReferenceFrame);
     mDecodeSettings = *p;
 
     return OMX_ErrorNone;
diff --git a/videocodec/OMXVideoDecoderBase.cpp b/videocodec/OMXVideoDecoderBase.cpp
index 7d1d830..58d9e24 100644
--- a/videocodec/OMXVideoDecoderBase.cpp
+++ b/videocodec/OMXVideoDecoderBase.cpp
@@ -259,7 +259,7 @@ OMX_ERRORTYPE OMXVideoDecoderBase::ProcessorResume(void) {
 }
 
 OMX_ERRORTYPE OMXVideoDecoderBase::ProcessorFlush(OMX_U32 portIndex) {
-    LOGI("Flushing port# %u.", portIndex);
+    LOGI("Flushing port# %lu.", portIndex);
     if (mVideoDecoder == NULL) {
         LOGE("ProcessorFlush: Video decoder is not created.");
         return OMX_ErrorDynamicResourcesUnavailable;
@@ -370,7 +370,7 @@ OMX_ERRORTYPE OMXVideoDecoderBase::ProcessorProcess(
                 (*pBuffers[INPORT_INDEX])->nTimeStamp = nextFrame->timestamp;
                 (*pBuffers[INPORT_INDEX])->nFilledLen -= nextFrame->offSet;
                 retains[INPORT_INDEX] = BUFFER_RETAIN_GETAGAIN;
-                LOGW("Find multiple frames in a buffer, next frame offset = %d, timestamp = %lld", (*pBuffers[INPORT_INDEX])->nOffset, (*pBuffers[INPORT_INDEX])->nTimeStamp);
+                LOGW("Find multiple frames in a buffer, next frame offset = %lu, timestamp = %lld", (*pBuffers[INPORT_INDEX])->nOffset, (*pBuffers[INPORT_INDEX])->nTimeStamp);
             }
         }
         else if (status != DECODE_SUCCESS && status != DECODE_FRAME_DROPPED) {
@@ -911,6 +911,7 @@ OMX_ERRORTYPE OMXVideoDecoderBase::SetNativeBufferModeSpecific(OMX_PTR pStructur
     }
     port_def.format.video.cMIMEType = (OMX_STRING)VA_VED_RAW_MIME_TYPE;
     port_def.format.video.eColorFormat = OMX_INTEL_COLOR_FormatYUV420PackedSemiPlanar;
+    port_def.format.video.nFrameWidth = (port_def.format.video.nFrameWidth + 0x1f) & ~0x1f;
     port_def.format.video.nFrameHeight = (port_def.format.video.nFrameHeight + 0x1f) & ~0x1f;
     port_def.format.video.eColorFormat = GetOutputColorFormat(
                         port_def.format.video.nFrameWidth);
diff --git a/videocodec/OMXVideoDecoderBase.h b/videocodec/OMXVideoDecoderBase.h
index 48706b8..49610a7 100644
--- a/videocodec/OMXVideoDecoderBase.h
+++ b/videocodec/OMXVideoDecoderBase.h
@@ -27,7 +27,7 @@
 #include "graphics.h"
 #endif
 
-static constexpr const char* VA_VED_RAW_MIME_TYPE = "video/x-raw-vaved";
+static const char* VA_VED_RAW_MIME_TYPE = "video/x-raw-vaved";
 static const uint32_t VA_VED_COLOR_FORMAT = 0x20;
 
 
diff --git a/videocodec/libvpx_internal/libvpx.mk b/videocodec/libvpx_internal/libvpx.mk
index 5a95803..315abd6 100644
--- a/videocodec/libvpx_internal/libvpx.mk
+++ b/videocodec/libvpx_internal/libvpx.mk
@@ -50,7 +50,6 @@ LOCAL_CFLAGS += -Wno-unused-function
 # in vp[89]_[cd]x_iface.c
 LOCAL_CLANG_CFLAGS += -Wno-missing-field-initializers
 
-LOCAL_CFLAGS += -Werror
 LOCAL_MODULE := libvpx_internal
 
 LOCAL_MODULE_CLASS := STATIC_LIBRARIES
@@ -123,7 +122,7 @@ LOCAL_GENERATED_SOURCES += $(VPX_GEN)
 
 ifeq ($(libvpx_target),x86)
 libvpx_x86_asm_src_files := $(filter %.asm, $(libvpx_codec_srcs_unique))
-libvpx_x86_yasm_dir := prebuilts/misc/$(HOST_OS)-$(HOST_PREBUILT_ARCH)/yasm
+libvpx_x86_yasm_dir := /usr/bin
 
 X86_ASM_GEN := $(addprefix $(libvpx_intermediates)/, $(libvpx_x86_asm_src_files:%.asm=%.asm.o))
 
