From f6974a5c34685606300265d6b36ff7d8ae17b324 Mon Sep 17 00:00:00 2001
From: Vincent Becker <vincentx.becker@intel.com>
Date: Fri, 10 Aug 2012 14:40:49 +0200
Subject: [PATCH 1/2] [PATCH] [PORT FROM MAIN] Adapt AOSP (default) vibrator
 HAL into a hardware module.

Android's implementation of vibrator needs to be done inside
a hardware module, so that it can make a vendor implementation
possible. This is the case for Intel vendor implementation.
Hw module's name becomes vibrator.default.so.

Change-Id: Ic91ecf16d3d1e9ac2888908160fc8fa9f390e015
Category: device enablement
Domain: AudioComms-Common
Origin: internal
Signed-off-by: Vincent Becker <vincentx.becker@intel.com>
---
 include/hardware/vibrator.h |  70 ++++++++++++++++++++++++++++
 modules/Android.mk          |   2 +-
 modules/vibrator/Android.mk |  30 ++++++++++++
 modules/vibrator/vibrator.c | 109 ++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 210 insertions(+), 1 deletion(-)
 create mode 100644 include/hardware/vibrator.h
 create mode 100644 modules/vibrator/Android.mk
 create mode 100644 modules/vibrator/vibrator.c

diff --git a/include/hardware/vibrator.h b/include/hardware/vibrator.h
new file mode 100644
index 0000000..f24c257
--- /dev/null
+++ b/include/hardware/vibrator.h
@@ -0,0 +1,70 @@
+/*
+ * Copyright (C) 2008 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#ifndef _HARDWARE_VIBRATOR_H
+#define _HARDWARE_VIBRATOR_H
+
+#include <stdint.h>
+#include <sys/cdefs.h>
+#include <sys/types.h>
+
+#include <hardware/hardware.h>
+
+__BEGIN_DECLS
+
+#define VIBRATOR_API_VERSION 1
+
+/**
+ * The id of this module
+ */
+#define VIBRATOR_HARDWARE_MODULE_ID "vibrator"
+
+/**
+ * Every hardware module must have a data structure named HAL_MODULE_INFO_SYM
+ * and the fields of this data structure must begin with hw_module_t
+ * followed by module specific information.
+ */
+typedef struct vibrator_module {
+    struct hw_module_t common;
+
+    /**
+     * Return whether the device has a vibrator.
+     *
+     * @return 1 if a vibrator exists, 0 if it doesn't.
+     */
+    int (*vibrator_exists)();
+
+    /**
+     * Turn on vibrator
+     *
+     * @param timeout_ms number of milliseconds to vibrate
+     *
+     * @return 0 if successful, -1 if error
+     */
+    int (*vibrator_on)(int timeout_ms);
+
+    /**
+     * Turn off vibrator
+     *
+     * @return 0 if successful, -1 if error
+     */
+    int (*vibrator_off)();
+} vibrator_module_t;
+
+
+__END_DECLS
+
+#endif  // _HARDWARE_VIBRATOR_H
diff --git a/modules/Android.mk b/modules/Android.mk
index b2d5a2a..de41f6f 100644
--- a/modules/Android.mk
+++ b/modules/Android.mk
@@ -1,3 +1,3 @@
 hardware_modules := gralloc hwcomposer audio nfc nfc-nci local_time \
-	power usbaudio audio_remote_submix camera consumerir
+	power usbaudio audio_remote_submix camera consumerir vibrator
 include $(call all-named-subdir-makefiles,$(hardware_modules))
diff --git a/modules/vibrator/Android.mk b/modules/vibrator/Android.mk
new file mode 100644
index 0000000..5bb3d0d
--- /dev/null
+++ b/modules/vibrator/Android.mk
@@ -0,0 +1,30 @@
+# Copyright (C) 2012 The Android Open Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+LOCAL_PATH := $(call my-dir)
+
+include $(CLEAR_VARS)
+
+# HAL module implemenation stored in
+# hw/<OVERLAY_HARDWARE_MODULE_ID>.<ro.product.board>.so
+
+LOCAL_MODULE := vibrator.default
+LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)/hw
+LOCAL_C_INCLUDES := hardware/libhardware_legacy
+LOCAL_SRC_FILES := vibrator.c
+LOCAL_SHARED_LIBRARIES := liblog
+LOCAL_MODULE_TAGS := optional
+
+include $(BUILD_SHARED_LIBRARY)
+
diff --git a/modules/vibrator/vibrator.c b/modules/vibrator/vibrator.c
new file mode 100644
index 0000000..e2b0360
--- /dev/null
+++ b/modules/vibrator/vibrator.c
@@ -0,0 +1,109 @@
+/*
+ * Copyright (C) 2012 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include <stdio.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <errno.h>
+
+#include <cutils/log.h>
+#include <math.h>
+
+#include <qemu.h>
+#include <hardware/hardware.h>
+#include <hardware/vibrator.h>
+
+static const char THE_DEVICE[] = "/sys/class/timed_output/vibrator/enable";
+
+static int vibraExists() {
+    int fd;
+
+#ifdef QEMU_HARDWARE
+    if (qemu_check()) {
+        return 1;
+    }
+#endif
+
+    fd = open(THE_DEVICE, O_RDWR);
+    if(fd < 0) {
+      ALOGE("Vibrator file does not exists : %d", fd);
+      return 0;
+    }
+
+    close(fd);
+    return 1;
+}
+
+static int sendit(int timeout_ms)
+{
+    int nwr, ret, fd;
+    // Size of an int in bits and on base-2 system + 1 for precision + 1 for end of string \0 char
+    uint32_t MAX_CHAR_SIZE = sizeof(int) * 8 * log (2) +1 +1;
+
+    char value[MAX_CHAR_SIZE];
+
+#ifdef QEMU_HARDWARE
+    if (qemu_check()) {
+        return qemu_control_command( "vibrator:%d", timeout_ms );
+    }
+#endif
+
+    fd = open(THE_DEVICE, O_RDWR);
+    if(fd < 0) {
+        return errno;
+    }
+
+    nwr = snprintf(value, sizeof(value), "%d\n", timeout_ms);
+    ret = write(fd, value, nwr);
+
+    close(fd);
+
+    return (ret == nwr) ? 0 : -1;
+}
+
+int vibraOn(int timeout_ms)
+{
+    /* constant on, up to maximum allowed time */
+    return sendit(timeout_ms);
+}
+
+int vibraOff()
+{
+    return sendit(0);
+}
+
+/*===========================================================================*/
+/* Default vibrator HW module interface definition                           */
+/*===========================================================================*/
+
+static struct hw_module_methods_t vibra_module_methods = {
+    .open = NULL,
+};
+
+struct vibrator_module HAL_MODULE_INFO_SYM = {
+    .common = {
+        .tag = HARDWARE_MODULE_TAG,
+        .version_major = 1,
+        .version_minor = 0,
+        .id = VIBRATOR_HARDWARE_MODULE_ID,
+        .name = "Default vibrator HAL",
+        .author = "The Android Open Source Project",
+        .methods = &vibra_module_methods,
+  },
+    .vibrator_exists = vibraExists,
+    .vibrator_on = vibraOn,
+    .vibrator_off = vibraOff,
+};
-- 
2.7.4

